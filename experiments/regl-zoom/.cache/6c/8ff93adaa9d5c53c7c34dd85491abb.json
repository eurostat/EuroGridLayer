{"id":"node_modules/ngraph.random/index.js","dependencies":[{"name":"E:\\web\\gridded-statistics\\Github\\EuroGridLayer\\experiments\\regl-zoom\\package.json","includedInParent":true,"mtime":1576225986807},{"name":"E:\\web\\gridded-statistics\\Github\\EuroGridLayer\\experiments\\regl-zoom\\node_modules\\ngraph.random\\package.json","includedInParent":true,"mtime":1576225960806}],"generated":{"js":"module.exports = {\n  random: random,\n  randomIterator: randomIterator\n};\n\n/**\n * Creates seeded PRNG with two methods:\n *   next() and nextDouble()\n */\nfunction random(inputSeed) {\n  var seed = typeof inputSeed === 'number' ? inputSeed : (+ new Date());\n  var randomFunc = function() {\n      // Robert Jenkins' 32 bit integer hash function.\n      seed = ((seed + 0x7ed55d16) + (seed << 12))  & 0xffffffff;\n      seed = ((seed ^ 0xc761c23c) ^ (seed >>> 19)) & 0xffffffff;\n      seed = ((seed + 0x165667b1) + (seed << 5))   & 0xffffffff;\n      seed = ((seed + 0xd3a2646c) ^ (seed << 9))   & 0xffffffff;\n      seed = ((seed + 0xfd7046c5) + (seed << 3))   & 0xffffffff;\n      seed = ((seed ^ 0xb55a4f09) ^ (seed >>> 16)) & 0xffffffff;\n      return (seed & 0xfffffff) / 0x10000000;\n  };\n\n  return {\n      /**\n       * Generates random integer number in the range from 0 (inclusive) to maxValue (exclusive)\n       *\n       * @param maxValue Number REQUIRED. Ommitting this number will result in NaN values from PRNG.\n       */\n      next : function (maxValue) {\n          return Math.floor(randomFunc() * maxValue);\n      },\n\n      /**\n       * Generates random double number in the range from 0 (inclusive) to 1 (exclusive)\n       * This function is the same as Math.random() (except that it could be seeded)\n       */\n      nextDouble : function () {\n          return randomFunc();\n      }\n  };\n}\n\n/*\n * Creates iterator over array, which returns items of array in random order\n * Time complexity is guaranteed to be O(n);\n */\nfunction randomIterator(array, customRandom) {\n    var localRandom = customRandom || random();\n    if (typeof localRandom.next !== 'function') {\n      throw new Error('customRandom does not match expected API: next() function is missing');\n    }\n\n    return {\n        forEach : function (callback) {\n            var i, j, t;\n            for (i = array.length - 1; i > 0; --i) {\n                j = localRandom.next(i + 1); // i inclusive\n                t = array[j];\n                array[j] = array[i];\n                array[i] = t;\n\n                callback(t);\n            }\n\n            if (array.length) {\n                callback(array[0]);\n            }\n        },\n\n        /**\n         * Shuffles array randomly, in place.\n         */\n        shuffle : function () {\n            var i, j, t;\n            for (i = array.length - 1; i > 0; --i) {\n                j = localRandom.next(i + 1); // i inclusive\n                t = array[j];\n                array[j] = array[i];\n                array[i] = t;\n            }\n\n            return array;\n        }\n    };\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ngraph.random/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ngraph.random/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"node_modules/ngraph.random/index.js":"module.exports = {\n  random: random,\n  randomIterator: randomIterator\n};\n\n/**\n * Creates seeded PRNG with two methods:\n *   next() and nextDouble()\n */\nfunction random(inputSeed) {\n  var seed = typeof inputSeed === 'number' ? inputSeed : (+ new Date());\n  var randomFunc = function() {\n      // Robert Jenkins' 32 bit integer hash function.\n      seed = ((seed + 0x7ed55d16) + (seed << 12))  & 0xffffffff;\n      seed = ((seed ^ 0xc761c23c) ^ (seed >>> 19)) & 0xffffffff;\n      seed = ((seed + 0x165667b1) + (seed << 5))   & 0xffffffff;\n      seed = ((seed + 0xd3a2646c) ^ (seed << 9))   & 0xffffffff;\n      seed = ((seed + 0xfd7046c5) + (seed << 3))   & 0xffffffff;\n      seed = ((seed ^ 0xb55a4f09) ^ (seed >>> 16)) & 0xffffffff;\n      return (seed & 0xfffffff) / 0x10000000;\n  };\n\n  return {\n      /**\n       * Generates random integer number in the range from 0 (inclusive) to maxValue (exclusive)\n       *\n       * @param maxValue Number REQUIRED. Ommitting this number will result in NaN values from PRNG.\n       */\n      next : function (maxValue) {\n          return Math.floor(randomFunc() * maxValue);\n      },\n\n      /**\n       * Generates random double number in the range from 0 (inclusive) to 1 (exclusive)\n       * This function is the same as Math.random() (except that it could be seeded)\n       */\n      nextDouble : function () {\n          return randomFunc();\n      }\n  };\n}\n\n/*\n * Creates iterator over array, which returns items of array in random order\n * Time complexity is guaranteed to be O(n);\n */\nfunction randomIterator(array, customRandom) {\n    var localRandom = customRandom || random();\n    if (typeof localRandom.next !== 'function') {\n      throw new Error('customRandom does not match expected API: next() function is missing');\n    }\n\n    return {\n        forEach : function (callback) {\n            var i, j, t;\n            for (i = array.length - 1; i > 0; --i) {\n                j = localRandom.next(i + 1); // i inclusive\n                t = array[j];\n                array[j] = array[i];\n                array[i] = t;\n\n                callback(t);\n            }\n\n            if (array.length) {\n                callback(array[0]);\n            }\n        },\n\n        /**\n         * Shuffles array randomly, in place.\n         */\n        shuffle : function () {\n            var i, j, t;\n            for (i = array.length - 1; i > 0; --i) {\n                j = localRandom.next(i + 1); // i inclusive\n                t = array[j];\n                array[j] = array[i];\n                array[i] = t;\n            }\n\n            return array;\n        }\n    };\n}\n"},"lineCount":86}},"error":null,"hash":"48297276355782599dee288600b5c9fb","cacheData":{"env":{}}}